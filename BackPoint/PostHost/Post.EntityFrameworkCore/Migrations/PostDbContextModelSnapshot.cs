// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Post.EntityFrameworkCore.EntityFrameworkCore;

namespace Post.EntityFrameworkCore.Migrations
{
    [DbContext(typeof(PostDbContext))]
    partial class PostDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.1-servicing-10028")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Post.Core.ArticleManager.ArticleEntity.Article", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ArticleName")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("ArticleTags");

                    b.Property<string>("ArticleUrl")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("AuthorAvator");

                    b.Property<string>("Avator");

                    b.Property<DateTime>("CreationTime");

                    b.Property<string>("Introduce")
                        .IsRequired()
                        .HasMaxLength(300);

                    b.Property<string>("IsRecommend");

                    b.Property<DateTime?>("LastModificationTime")
                        .IsRequired();

                    b.Property<int>("PageView");

                    b.Property<int>("TypeId");

                    b.HasKey("Id");

                    b.HasIndex("TypeId");

                    b.ToTable("Articles");
                });

            modelBuilder.Entity("Post.Core.ArticleManager.ArticleTypeEntity.ArticleType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<string>("TypeAvator");

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("TypeValue")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("ArticleType");
                });

            modelBuilder.Entity("Post.Core.MessageManager.LeaveMessageEntity.LeaveMessage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<string>("MessageContent")
                        .IsRequired()
                        .HasMaxLength(600);

                    b.Property<string>("UserAvator")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("LeaveMessages");
                });

            modelBuilder.Entity("Post.Core.ArticleManager.ArticleEntity.Article", b =>
                {
                    b.HasOne("Post.Core.ArticleManager.ArticleTypeEntity.ArticleType", "ArticleType")
                        .WithMany("Articles")
                        .HasForeignKey("TypeId");
                });
#pragma warning restore 612, 618
        }
    }
}
